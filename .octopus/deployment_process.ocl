{
  "Id": "deploymentprocess-Projects-2427",
  "SpaceId": "Spaces-2",
  "ProjectId": "Projects-2427",
  "Version": 45,
  "Steps": [
    {
      "Id": "53bde2c9-633c-4549-8bf7-d60fb634e581",
      "Name": "Set Product_Instance_Id",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "e39d0640-d278-4bfb-ba27-a1968f106b1c",
          "Name": "Set Product_Instance_Id",
          "ActionType": "Octopus.Script",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.RunOnServer": "true",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "if ($OctopusParameters[\"Octopus.Release.Channel.Name\"] -eq \"Default\") {\n $product_instance_id = \"01\"\n} else {\n $release = $OctopusParameters['Octopus.Release.Number']\n write-host $release\n $version = New-Object System.Version $release.Split(\"-\")[0]\n $build = $version.Build    # Major, Minor, Build, Revision\n $product_instance_id = $build.ToString(\"00\")\n}\nSet-OctopusVariable -Name \"product_instance_id\" -Value \"$product_instance_id\""
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "b08b1fe5-8e06-4374-b602-0f30ec697b47",
      "Name": "Set AppSettings",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "04bb47d6-1724-4242-adf7-d9007448aa17",
          "Name": "Set AppSettings",
          "ActionType": "Octopus.Script",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "d37a8f2a-830a-4009-bcac-7c87ecc07adb",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Script.ScriptFileName": "Create formatted variables for terraform ingest.ps1",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Template.Version": "3",
            "Octopus.Action.Template.Id": "ActionTemplates-865",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "51bc8b43-4bce-4e74-ad01-6e9243ed75b8",
      "Name": "Create State File Container",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "0b09759a-bf80-4bf2-b43d-1e0c2cf1ea48",
          "Name": "Create State File Container",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "f983c203-d398-4fbd-b1a4-d9856463503d",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {}
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Script.ScriptFileName": "CreateStateFileContainer.ps1",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Template.Version": "4",
            "Octopus.Action.Template.Id": "ActionTemplates-826",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "50c5e262-62e8-46bd-aec0-5a884ffff3e6",
      "Name": "Plan Terraform Infrastructure",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "c3100c4c-37b1-4324-a520-97b57392ac83",
          "Name": "Plan Terraform Infrastructure",
          "ActionType": "Octopus.TerraformPlan",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "a0a14eef-ff9c-479d-bf57-6b41b614561a",
              "Name": "",
              "PackageId": "NewDay.AppTemplate.Infrastructure",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {}
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Aws.AssumeRole": "False",
            "Octopus.Action.AwsAccount.UseInstanceRole": "False",
            "Octopus.Action.Terraform.ManagedAccount": "None",
            "Octopus.Action.Terraform.AllowPluginDownloads": "True",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Terraform.AdditionalInitParams": "#{terraform_init_parameters}",
            "Octopus.Action.Terraform.AdditionalActionParams": "#{terraform_plan_parameters}",
            "Octopus.Action.Package.PackageId": "NewDay.AppTemplate.Infrastructure",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Terraform.TemplateDirectory": "#{tf_template_dir}",
            "Octopus.Action.Terraform.AzureAccount": "False",
            "Octopus.Action.Terraform.RunAutomaticFileSubstitution": "True",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "7407498c-b4d8-4161-92e1-e40e6a754495",
      "Name": "Check Plan Output For Destroy",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "6ca92447-7d66-4272-aa8b-09b8e594d584",
          "Name": "Check Plan Output For Destroy",
          "ActionType": "Octopus.Script",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": true,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.RunOnServer": "true",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "$regex = \"[1-9]{1,}\\s\\bto.destroy.\"\n$plan_output = $OctopusParameters[\"Octopus.Action[Plan Terraform Infrastructure].Output.TerraformPlanOutput\"] | Select-String -AllMatches $regex\n\nif ($plan_output -ne $null) {\n    Set-OctopusVariable -name \"terraform_plan_destroy_resources\" -value \"true\"\n    Set-OctopusVariable -name \"plan_output\" -value $plan_output\n    Write-Host \"Warning: Items being destroyed in Terraform plan step, please check the terraform plan output before proceeding as resources will be destroyed.\"\n}\n\nif ($plan_output -eq $null) {\n    Set-OctopusVariable -name \"terraform_plan_destroy_resources\" -value \"false\"\n    Set-OctopusVariable -name \"plan_output\" -value $plan_output\n    Write-Host \"No items being destroyed.\"\n}"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "247fe41a-b54a-4361-94c9-5fe7182fce97",
      "Name": "Manual Intervention If Terraform Destroy Detected",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {
        "Octopus.Step.ConditionVariableExpression": "#{Octopus.Action[Check Terraform Plan Output For Destroy].Output.terraform_plan_destroy_resources}"
      },
      "Condition": "Variable",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "3622b49d-270d-43d3-9977-709c8d35bd40",
          "Name": "Manual Intervention If Terraform Destroy Detected",
          "ActionType": "Octopus.Manual",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": true,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": null,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Manual.Instructions": "Warning: Items being destroyed in Terraform plan step, please check the Terraform plan output before proceeding as resources will be destroyed.",
            "Octopus.Action.Manual.BlockConcurrentDeployments": "False",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "5ce78e80-22d2-465b-a781-63c3180f90d5",
      "Name": "Apply Terraform Infrastructure",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "c11393ab-072c-4827-bec5-6fada90ad7cc",
          "Name": "Apply Terraform Infrastructure",
          "ActionType": "Octopus.TerraformApply",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "e3718233-0e5f-4979-85a6-1c9f7c4f0f70",
              "Name": "",
              "PackageId": "NewDay.AppTemplate.Infrastructure",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {}
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Aws.AssumeRole": "False",
            "Octopus.Action.AwsAccount.UseInstanceRole": "False",
            "Octopus.Action.Terraform.ManagedAccount": "None",
            "Octopus.Action.Terraform.AllowPluginDownloads": "True",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Terraform.AdditionalInitParams": "#{terraform_init_parameters}",
            "Octopus.Action.Terraform.AdditionalActionParams": "#{terraform_apply_parameters}",
            "Octopus.Action.Package.PackageId": "NewDay.AppTemplate.Infrastructure",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Terraform.TemplateDirectory": "#{tf_template_dir}",
            "Octopus.Action.Terraform.AzureAccount": "False",
            "Octopus.Action.Terraform.RunAutomaticFileSubstitution": "True",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "5f3cbaf4-0f7a-4e48-a1d7-391518f2bc99",
      "Name": "Create New-OctopusAzureWebAppTarget",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "121b3445-9c47-40d6-a748-dc9c25f02a14",
          "Name": "Create New-OctopusAzureWebAppTarget",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "$role = $OctopusParameters[\"product_id\"] + \"-app\"\n$webAppName = $OctopusParameters[\"web_app_name\"]\n$resourceGroup = $OctopusParameters[\"resource_group_name\"]\n\n$deploymentTargets = '{0},{1}' -f $webAppName, $role\n\nWrite-Output \"WebAppName:  $webAppName\"\nWrite-Output \"resourceGroup:  $resourceGroup\"\nWrite-Output \"role:  $role\"\nWrite-Output \"deploymentTargets:  $deploymentTargets\"\n\nNew-OctopusAzureWebAppTarget -Name $webAppName `\n                              -AzureWebApp $webAppName `\n                              -AzureResourceGroupName $resourceGroup `\n                              -OctopusAccountIdOrName $OctopusParameters[\"account\"] `\n                              -OctopusRoles $deploymentTargets `\n                              -updateIfExisting\n",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "e609465f-0d8a-494b-b20b-9931923ab23f",
      "Name": "Target Health Check",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {
        "Octopus.Action.TargetRoles": "#{web_app_server}"
      },
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "74f89266-93e9-4e23-b669-502572d61d01",
          "Name": "Target Health Check",
          "ActionType": "Octopus.HealthCheck",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": null,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.HealthCheck.Type": "FullHealthCheck",
            "Octopus.Action.HealthCheck.ErrorHandling": "TreatExceptionsAsErrors",
            "Octopus.Action.HealthCheck.IncludeMachinesInDeployment": "IncludeCheckedMachines",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "2ecac961-485e-400f-b2cb-d1f89617adae",
      "Name": "Configure Network",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "f25d5343-15b6-4c0e-8111-d25189037542",
          "Name": "Update Network Restrictions",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "3297e2e6-241e-4864-9bc7-861801715339",
              "Name": "",
              "PackageId": "NewDay.NextGen.DynamicAllowListing",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Script.ScriptFileName": ".\\content\\Deployment\\CallFunctionWithAllowListingConfig.ps1",
            "Octopus.Action.Script.ScriptParameters": "-JsonFileContents $JsonContents",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.DynamicAllowListing",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Template.Version": "2",
            "Octopus.Action.Template.Id": "ActionTemplates-866",
            "JsonContents": "#{network_restrictions}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "9ebc1594-c49b-4ffc-b06b-323d325868db",
      "Name": "Enable AD Authentication",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "5f8c52b3-83a7-4d3a-a8d2-174e790d9065",
          "Name": "Enable on Production2",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "5d028b94-b67b-4895-8270-f1033d5abc18",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Script.ScriptParameters": "-ResourceName $ResourceName -ResourceGroupName $ResourceGroupName -AzureSubscriptionId $azure_provider_subscription_id -ResourceSlotName $ResourceSlotName -AuthAction $AuthAction -CustomAudience $CustomAudience -CustomADApplication $CustomADApplication -ReplyUrls $ReplyUrls",
            "Octopus.Action.Script.ScriptFileName": "Enable AD Authentication apply Token Audience on Web or Function app.ps1",
            "ResourceSlotName": "production",
            "AuthAction": "LoginWithAzureActiveDirectory",
            "ResourceName": "#{web_app_name}",
            "ResourceGroupName": "#{resource_group_name}",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.SelectPowerShellEditionForWindows",
            "Octopus.Action.PowerShell.Edition": "Desktop",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False",
            "Octopus.Action.Template.Version": "37",
            "Octopus.Action.Template.Id": "ActionTemplates-1063"
          },
          "Links": {}
        },
        {
          "Id": "e7584c6d-beb2-4923-9d8f-70ad0d530ea5",
          "Name": "Enable on Staging2",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "5d028b94-b67b-4895-8270-f1033d5abc18",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Script.ScriptParameters": "-ResourceName $ResourceName -ResourceGroupName $ResourceGroupName -AzureSubscriptionId $azure_provider_subscription_id -ResourceSlotName $ResourceSlotName -AuthAction $AuthAction -CustomAudience $CustomAudience -CustomADApplication $CustomADApplication -ReplyUrls $ReplyUrls",
            "Octopus.Action.Script.ScriptFileName": "Enable AD Authentication apply Token Audience on Web or Function app.ps1",
            "ResourceSlotName": "staging",
            "AuthAction": "LoginWithAzureActiveDirectory",
            "ResourceName": "#{web_app_name}",
            "ResourceGroupName": "#{resource_group_name}",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.SelectPowerShellEditionForWindows",
            "Octopus.Action.PowerShell.Edition": "Desktop",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False",
            "Octopus.Action.Template.Version": "37",
            "Octopus.Action.Template.Id": "ActionTemplates-1063"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "ed9b0194-7aa5-493e-a4f2-18a4b2174763",
      "Name": "Pre WebApp Deployment Custom Steps",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "07609dc4-0d94-43e8-b779-c215e9707539",
          "Name": "Pre WebApp Deployment Custom Steps Note",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "# Safe to remove this step when you have >1 steps in the \"Pre WebApp Deployment Custom Steps\" group\nWrite-Host \"Place Pre WebApp Deployment Custom Steps Into This Parent Step Only\"",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "fc067f5e-a107-4d94-aba6-aec605f41665",
          "Name": "Add MSI app to KeyVault access policy2",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "if ($ResourceName = \"Microsoft.Azure.Frontdoor\"){\n$appSPN = (az ad sp list --display-name $ResourceName --query \"[?displayName == '$ResourceName']\" | ConvertFrom-Json)\n}\nelse{\n$appSPN = (az ad sp list --display-name $ResourceName --query \"[?displayName == '$ResourceName' && servicePrincipalType == 'ManagedIdentity']\" | ConvertFrom-Json)\n}\nWrite-Output \"principal is:\" $appSPN.objectId\nWrite-Output \"ResourceName=$ResourceName\"\nWrite-Output \"KeyVaultName=$KeyVaultName\"\nWrite-Output \"KeyVaultResourceGroup=$KeyVaultResourceGroup\"\nWrite-Output \"-----\"\n$KeysPermissions=(\"get\",\"list\")\n$SecretsPermissions=(\"get\",\"list\")\n$CertPermissions=(\"get\",\"list\")\naz keyvault set-policy -n $KeyVaultName -g $KeyVaultResourceGroup  --object-id $appSPN.objectId --secret-permissions $SecretsPermissions --key-permissions $KeysPermissions --certificate-permissions $CertPermissions\n\n$slotSpName = $ResourceName+\"/slots/Staging\"; ## changed from staging\n$appSPNSlot = (az ad sp list --display-name $slotSpName --query \"[?displayName == '$slotSpName' && servicePrincipalType == 'ManagedIdentity']\" | ConvertFrom-Json)\nWrite-Output \"slot principal is:\" $appSPNSlot.objectId\n\nif ($appSPNSlot.objectId){\naz keyvault set-policy -n $KeyVaultName -g $KeyVaultResourceGroup  --object-id $appSPNSlot.objectId  --secret-permissions $SecretsPermissions --key-permissions $KeysPermissions --certificate-permissions $CertPermissions\n}",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Template.Version": "4",
            "Octopus.Action.Template.Id": "ActionTemplates-1073",
            "ResourceName": "apsvc#{tenantname_id}#{environment_id}#{product_id}#{product_instance_id}01",
            "KeyVaultName": "#{keyvault.name}",
            "KeyVaultResourceGroup": "#{keyvault.resourcegroup}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "ab6cb317-e941-420f-b261-09d467076fe2",
          "Name": "Add MSI Application to Keyvault AD Group",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "Write-Host \"ResourceName = $ResourceName\"\nWrite-Host \"GroupName = $GroupName\"\nWrite-Host \"------------------------\"\n$appSPN = Get-AzADServicePrincipal -DisplayName $ResourceName | ? {$_.ServicePrincipalName -Match \"identity\"}\nWrite-Host \"Identity ID ==> $($appSPN.Id)\"\n$accessGroup = Get-AzADGroup -DisplayName $GroupName\nWrite-Host \"Group ID ==> $($accessGroup.Id)\"\n$members = az ad group member list --group $accessGroup.Id --only-show-errors | ConvertFrom-Json\nif ($members | ? { $_.objectId -eq $appSPN.Id }) {\n\tWrite-Host \"Already a member of group\"\n    } \n    else {\n        Add-AzADGroupMember -MemberObjectId $appSPN.Id -TargetGroupObjectId $accessGroup.Id\n}\n\nif ($ResourceName.Substring(0,5) -eq \"funap\" -or  $ResourceName.Substring(0,5) -eq \"apsvc\") {\n    Write-Host \"Adding $ResourceName /slots/staging to $GroupName\"\n    $slotSpName = $ResourceName+\"/slots/staging\";\n    $appSPN = Get-AzADServicePrincipal -DisplayName $slotSpName | ? {$_.ServicePrincipalName -Match \"identity\"}\n    Write-Host \"Identity ID ==> $($appSPN.Id)\"\n    $accessGroup = Get-AzADGroup -DisplayName $GroupName\n    Write-Host \"Group ID ==> $($accessGroup.Id)\"\n    $members = az ad group member list --group $accessGroup.Id --only-show-errors | ConvertFrom-Json\n    if ($members | ? { $_.objectId -eq $appSPN.Id }) {\n        Write-Host \"Resource $ResourceName already a member of $GroupName group\"\n    } \n    else {\n        Add-AzADGroupMember -MemberObjectId $appSPN.Id -TargetGroupObjectId $accessGroup.Id\n    }\n}\nelse {\n    Write-Host \"Not a function or webapp so not adding Slot MSI to AD Group $GroupName\"\n}",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "ResourceName": "apsvc#{tenantname_id}#{environment_id}#{product_id}#{product_instance_id}01",
            "GroupName": "#{shared.keyvault.groupname}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "True",
            "Octopus.Action.Template.Version": "17",
            "Octopus.Action.Template.Id": "ActionTemplates-981"
          },
          "Links": {}
        },
        {
          "Id": "7a140a13-eb61-44b6-8221-3448c29ada13",
          "Name": "Add MSI Application to SQL AD Group",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": "AD group needs to exist first. Created by SQL Server DACPAC deployment pipeline.",
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "Write-Host \"ResourceName = $ResourceName\"\nWrite-Host \"GroupName = $GroupName\"\nWrite-Host \"------------------------\"\n$appSPN = Get-AzADServicePrincipal -DisplayName $ResourceName | ? {$_.ServicePrincipalName -Match \"identity\"}\nWrite-Host \"Identity ID ==> $($appSPN.Id)\"\n$accessGroup = Get-AzADGroup -DisplayName $GroupName\nWrite-Host \"Group ID ==> $($accessGroup.Id)\"\n$members = az ad group member list --group $accessGroup.Id --only-show-errors | ConvertFrom-Json\nif ($members | ? { $_.objectId -eq $appSPN.Id }) {\n\tWrite-Host \"Already a member of group\"\n    } \n    else {\n        Add-AzADGroupMember -MemberObjectId $appSPN.Id -TargetGroupObjectId $accessGroup.Id\n}\n\nif ($ResourceName.Substring(0,5) -eq \"funap\" -or  $ResourceName.Substring(0,5) -eq \"apsvc\") {\n    Write-Host \"Adding $ResourceName /slots/staging to $GroupName\"\n    $slotSpName = $ResourceName+\"/slots/staging\";\n    $appSPN = Get-AzADServicePrincipal -DisplayName $slotSpName | ? {$_.ServicePrincipalName -Match \"identity\"}\n    Write-Host \"Identity ID ==> $($appSPN.Id)\"\n    $accessGroup = Get-AzADGroup -DisplayName $GroupName\n    Write-Host \"Group ID ==> $($accessGroup.Id)\"\n    $members = az ad group member list --group $accessGroup.Id --only-show-errors | ConvertFrom-Json\n    if ($members | ? { $_.objectId -eq $appSPN.Id }) {\n        Write-Host \"Resource $ResourceName already a member of $GroupName group\"\n    } \n    else {\n        Add-AzADGroupMember -MemberObjectId $appSPN.Id -TargetGroupObjectId $accessGroup.Id\n    }\n}\nelse {\n    Write-Host \"Not a function or webapp so not adding Slot MSI to AD Group $GroupName\"\n}",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "ResourceName": "apsvc#{tenantname_id}#{environment_id}#{product_id}#{product_instance_id}01",
            "GroupName": "#{SqlDb_Msi_AccessGroup}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "True",
            "Octopus.Action.Template.Version": "17",
            "Octopus.Action.Template.Id": "ActionTemplates-981"
          },
          "Links": {}
        },
        {
          "Id": "bfdc4eaa-3cdf-4f29-9e44-a0bcdbe30258",
          "Name": "Deploy Secrets to Keyvault",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "85375c8a-9514-48b4-ab5e-00c2680f9f27",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Script.ScriptFileName": "AddSecretsToKeyvaultFromOctopusVariables.ps1",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Template.Version": "11",
            "Octopus.Action.Template.Id": "ActionTemplates-1022",
            "prefix": "KVSecret",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "f393f3b1-59d3-4dc2-8bb5-646d7f054e4b",
      "Name": "Deploy WebApp with Slot",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {
        "Octopus.Action.TargetRoles": "#{web_app_server}"
      },
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "e44186e4-5bdf-4b1a-838e-e7c45a153714",
          "Name": "Deploy to slot",
          "ActionType": "Octopus.AzureWebApp",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "e921c13b-6a5c-4d43-a423-f45c0f98e877",
              "Name": "",
              "PackageId": "#{package_id}",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Azure.UseChecksum": "False",
            "Octopus.Action.Azure.DeploymentSlot": "#{slot}",
            "Octopus.Action.Package.PackageId": "#{package_id}",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings": "True",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.ConfigurationVariables",
            "Octopus.Action.Azure.PreserveAppData": "True",
            "Octopus.Action.Azure.RemoveAdditionalFiles": "True",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "7a71517f-45fe-4343-9884-7bd22ef46668",
          "Name": "Start Slot",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "$role = $OctopusParameters[\"product_id\"] + \"-app\"\n$applyStep = $OctopusParameters[\"apply_step\"]\n$applyStepResourceGroupName = 'Octopus.Action[' + $applyStep + '].Output.TerraformValueOutputs[resource_group_name]'\n$applyStepWebAppNames = 'Octopus.Action[' + $applyStep + '].Output.TerraformValueOutputs[web_app_default_site_hostname]'\n\n$resourceGroup = $OctopusParameters[$applyStepResourceGroupName]\n$resourceGroup = $resourceGroup -replace '[[]',''\n$resourceGroup = $resourceGroup -replace '[]]',''\n$resourceGroup = $resourceGroup.Trim().Trim('\"')\nWrite-Output \"resourceGroup: $resourceGroup\"\n\n$webAppNames = $OctopusParameters[$applyStepWebAppNames]\nWrite-Output \"WebAppName(s): $webAppNames\"\n$webAppNames = $webAppNames  -replace '[[]',''\n$webAppNames = $webAppNames  -replace '[]]',''\n$option = [System.StringSplitOptions]::RemoveEmptyEntries\n$webAppNames.Split(\",\\\", $option) | ForEach {\n $webAppName =  $_.Trim().Trim('\"').Split(\".\")[0]\n Write-Output \"WebAppName: $webAppName\"\n\n Start-AzureRmWebAppSlot -ResourceGroupName \"$resourceGroup\" -Name \"$WebAppName\" -Slot \"Staging\" -Verbose\n Start-Sleep -s 45\n }",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Template.Version": "1",
            "Octopus.Action.Template.Id": "ActionTemplates-863",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "ebd192fe-ce14-4566-87dd-e62632cb6960",
          "Name": "Slot Health Check",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "6fe5e718-6b96-4d34-aa0d-8bd61801e037",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Script.ScriptFileName": "CallHealthCheckEndpoint.ps1",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Script.ScriptParameters": "-AppName #{AppName} -ResourceGroupName #{ResourceGroupName} -SubscriptionId #{azure_provider_subscription_id} -HealthCheckEndpointUrl #{HealthCheckEndpointUrl} #{if WarnInsteadOfThrowingError}-WarnInsteadOfThrowingError#{/if}",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.SelectPowerShellEditionForWindows",
            "Octopus.Action.PowerShell.Edition": "Core",
            "AppName": "#{web_app_server}",
            "ResourceGroupName": "#{resource_group_name}",
            "HealthCheckEndpointUrl": "https://#{AppName}-staging.azurewebsites.net/api/healthcheck",
            "WarnInsteadOfThrowingError": "False",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False",
            "Octopus.Action.Template.Version": "6",
            "Octopus.Action.Template.Id": "ActionTemplates-1007"
          },
          "Links": {}
        },
        {
          "Id": "46c22c88-0199-4ccf-ab8b-c1a16cebd548",
          "Name": "Swap Slot",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "$action = $OctopusParameters[\"apply_step\"];\n$webAppNames = $OctopusParameters['Octopus.Action['+$action+'].Output.TerraformValueOutputs[web_app_default_site_hostname]']\nWrite-Output \"WebAppName(s): $webAppNames\"\n$webAppNames = $webAppNames  -replace '[[]',''\n$webAppNames = $webAppNames  -replace '[]]',''\n$option = [System.StringSplitOptions]::RemoveEmptyEntries\n$webAppNames.Split(\",\\\", $option) | ForEach {\n  \t$webAppName =  $_.Trim().Trim('\"').Split(\".\")[0]\n  \tWrite-Output \"WebAppName: $webAppName\" \n\tSwitch-AzureRmWebAppSlot -SourceSlotName \"Staging\" -DestinationSlotName \"production\" -ResourceGroupName \"$resource_group_name\" -Name $webAppName\n}",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "a72303cf-9082-4506-9606-fec3aeb3e3d7",
          "Name": "Stop Slot",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "$role = $OctopusParameters[\"product_id\"] + \"-app\"\n$applyStep = $OctopusParameters[\"apply_step\"]\n$applyStepResourceGroupName = 'Octopus.Action[' + $applyStep + '].Output.TerraformValueOutputs[resource_group_name]'\n$applyStepWebAppNames = 'Octopus.Action[' + $applyStep + '].Output.TerraformValueOutputs[web_app_default_site_hostname]'\n\n$resourceGroup = $OctopusParameters[$applyStepResourceGroupName]\n$resourceGroup = $resourceGroup -replace '[[]',''\n$resourceGroup = $resourceGroup -replace '[]]',''\n$resourceGroup = $resourceGroup.Trim().Trim('\"')\nWrite-Output \"resourceGroup: $resourceGroup\"\n\n$webAppNames = $OctopusParameters[$applyStepWebAppNames]\n#$webAppName = $OctopusParameters[\"Octopus.Environment.MachinesInRole\"]\nWrite-Output \"WebAppName(s): $webAppNames\"\n$webAppNames = $webAppNames  -replace '[[]',''\n$webAppNames = $webAppNames  -replace '[]]',''\n$option = [System.StringSplitOptions]::RemoveEmptyEntries\n$webAppNames.Split(\",\\\", $option) | ForEach {\n$webAppName =  $_.Trim().Trim('\"').Split(\".\")[0]\n \n\n Write-Output \"WebAppName: $webAppName\"\n\n Stop-AzureRmWebAppSlot -ResourceGroupName \"$resourceGroup\" -Name \"$WebAppName\" -Slot \"Staging\" -Verbose\n}",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Template.Version": "1",
            "Octopus.Action.Template.Id": "ActionTemplates-868",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "99c56999-f579-4cb2-9554-366a0663c0ea",
          "Name": "Prod Health Check",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "6fe5e718-6b96-4d34-aa0d-8bd61801e037",
              "Name": "",
              "PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
              "FeedId": "Feeds-1081",
              "AcquisitionLocation": "Server",
              "Properties": {
                "SelectionMode": "immediate"
              }
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Script.ScriptFileName": "CallHealthCheckEndpoint.ps1",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Script.ScriptParameters": "-AppName #{AppName} -ResourceGroupName #{ResourceGroupName} -SubscriptionId #{azure_provider_subscription_id} -HealthCheckEndpointUrl #{HealthCheckEndpointUrl} #{if WarnInsteadOfThrowingError}-WarnInsteadOfThrowingError#{/if}",
            "Octopus.Action.Package.PackageId": "NewDay.NextGen.Infrastructure.Octopus.Templates",
            "Octopus.Action.Package.FeedId": "Feeds-1081",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.SelectPowerShellEditionForWindows",
            "Octopus.Action.PowerShell.Edition": "Core",
            "AppName": "#{function_app_name}",
            "ResourceGroupName": "#{resource_group_name}",
            "HealthCheckEndpointUrl": "https://#{AppName}.azurewebsites.net/api/healthcheck",
            "WarnInsteadOfThrowingError": "False",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False",
            "Octopus.Action.Template.Version": "6",
            "Octopus.Action.Template.Id": "ActionTemplates-1007"
          },
          "Links": {}
        },
        {
          "Id": "53efa729-6676-4681-9840-9c195f095ffd",
          "Name": "Delete Octopus Azure WebApp Targets",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.Script.ScriptBody": "$deploymentTarget = $OctopusParameters[\"function_app_name\"]\n \nif ([string]::IsNullOrEmpty($deploymentTarget)) {\n$deploymentTarget = $OctopusParameters[\"web_app_name\"]\n}\n\nWrite-Output \"Removing: $deploymentTarget OctopusTarget\" \nRemove-OctopusTarget -targetIdOrName $deploymentTarget",
            "Octopus.Action.Template.Version": "4",
            "Octopus.Action.Template.Id": "ActionTemplates-1124",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "b3a266ec-dd89-4536-8905-8c59780cea0a",
      "Name": "Post WebApp Deployment Custom Steps",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "38a50030-6c03-4dd2-9c66-0d33ebd936bf",
          "Name": "Post WebApp Deployment Custom Steps Note",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "# Safe to remove this step when you have >1 steps in the \"Post WebApp Deployment Custom Steps\" group\nWrite-Host \"Place Post WebApp Deployment Custom Steps Into This Parent Step Only\"",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        },
        {
          "Id": "5672ce81-ec2c-436a-8d33-d4d41fb62903",
          "Name": "Post WebApp Deployment Custom Steps Note 2",
          "ActionType": "Octopus.AzurePowerShell",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "# Safe to remove this step when you have >1 steps in the \"Post WebApp Deployment Custom Steps\" group\nWrite-Host \"Place Post WebApp Deployment Custom Steps Into This Parent Step Only\"",
            "Octopus.Action.Azure.AccountId": "#{account}",
            "Octopus.Action.RunOnServer": "true",
            "OctopusUseBundledTooling": "False"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "6834df2a-b9f3-4973-aa45-3f0b4d78cd02",
      "Name": "Resource Cleanup",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "4fbf9afa-3603-4df4-85c2-90f1e7e69d03",
          "Name": "Manual Test WebApp",
          "ActionType": "Octopus.Manual",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": null,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Manual.Instructions": "Test #{Octopus.Project.Name} release #{Octopus.Release.Number} then continue.",
            "Octopus.Action.Manual.BlockConcurrentDeployments": "False",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        },
        {
          "Id": "0cdd2f0c-8ef6-4210-89cf-d460b6127a96",
          "Name": "Plan Destruction of NewDay.Platform Infrastructure",
          "ActionType": "Octopus.TerraformPlanDestroy",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "cd824f94-7575-44ad-b53a-8c44e9c3d7f0",
              "Name": "",
              "PackageId": "#{terraform_package}",
              "FeedId": "feeds-artifactory-newday-digital-nuget",
              "AcquisitionLocation": "Server",
              "Properties": {}
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Aws.AssumeRole": "False",
            "Octopus.Action.AwsAccount.UseInstanceRole": "False",
            "Octopus.Action.Terraform.ManagedAccount": "None",
            "Octopus.Action.Terraform.AllowPluginDownloads": "True",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Terraform.AdditionalInitParams": "#{terraform_init_parameters}",
            "Octopus.Action.Terraform.AdditionalActionParams": "#{terraform_plan_parameters}",
            "Octopus.Action.Package.PackageId": "#{terraform_package}",
            "Octopus.Action.Package.FeedId": "feeds-artifactory-newday-digital-nuget",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Terraform.TemplateDirectory": "#{tf_template_dir}",
            "Octopus.Action.Terraform.AzureAccount": "False",
            "Octopus.Action.Terraform.RunAutomaticFileSubstitution": "True",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        },
        {
          "Id": "b49a4d14-a19b-4d66-959f-0d351dde3e46",
          "Name": "Destroy NewDay.Platform Infrastructure",
          "ActionType": "Octopus.TerraformDestroy",
          "Notes": null,
          "IsDisabled": true,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "12d5e96c-ae89-4c11-974d-7e424b7f3329",
              "Name": "",
              "PackageId": "#{terraform_package}",
              "FeedId": "feeds-artifactory-newday-digital-nuget",
              "AcquisitionLocation": "Server",
              "Properties": {}
            }
          ],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Aws.AssumeRole": "False",
            "Octopus.Action.AwsAccount.UseInstanceRole": "False",
            "Octopus.Action.Terraform.ManagedAccount": "None",
            "Octopus.Action.Terraform.AllowPluginDownloads": "True",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Terraform.AdditionalInitParams": "#{terraform_init_parameters}",
            "Octopus.Action.Terraform.AdditionalActionParams": "#{terraform_apply_parameters}",
            "Octopus.Action.Terraform.TemplateDirectory": "#{tf_template_dir}",
            "Octopus.Action.Package.PackageId": "#{terraform_package}",
            "Octopus.Action.Package.FeedId": "feeds-artifactory-newday-digital-nuget",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Terraform.AzureAccount": "False",
            "Octopus.Action.Terraform.RunAutomaticFileSubstitution": "True",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
    },
    {
      "Id": "bf28941e-afc6-4522-9900-fa6a122c2310",
      "Name": "Microsoft Teams notify",
      "PackageRequirement": "LetOctopusDecide",
      "Properties": {},
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "Actions": [
        {
          "Id": "c944bd51-d30e-4a3e-bdb4-3822f659c64e",
          "Name": "Microsoft Teams notify",
          "ActionType": "Octopus.Script",
          "Notes": null,
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": false,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Container": {
            "Image": null,
            "FeedId": null
          },
          "WorkerPoolVariable": "workerpool",
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [],
          "Condition": "Success",
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptBody": "[int]$timeoutSec = $null\nif (-not [int]::TryParse($OctopusParameters['Timeout'], [ref]$timeoutSec)) { $timeoutSec = 60 }\n\nfunction Teams-Notification ($notification) {    \n    $payload = @{\n        type       = \"MessageCard\";\n        themeColor = $notification[\"color\"];\n        summary    = \"Deployment Notification\";\n        sections   = @(\n            @{\n                activityTitle    = \"**Octopus Deploy**\";\n                activitySubtitle = $notification[\"activitySubtitle\"];\n                activityImage    = $OctopusParameters['IconUrl'];\n                activityText     = $notification[\"activityText\"];\n            }\n        );\n    }\n\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n    Invoke-RestMethod -Method POST -Body ($payload | ConvertTo-Json -Depth 4) -Uri $OctopusParameters['TeamsHookUrl']  -ContentType 'application/json; charset=utf-8' -TimeoutSec $timeoutSec\n}\n\n$IncludeMachineName = [boolean]::Parse($OctopusParameters['IncludeMachineName']);\nif ($IncludeMachineName) {\n    $MachineName = $OctopusParameters['Octopus.Machine.Name'];\n    if ($MachineName) {\n        $FormattedMachineName = \"($MachineName)\";\n    }\n}\n\n$IncludeReleaseNotes = [boolean]::Parse($OctopusParameters['IncludeReleaseNotes']);\nif ($IncludeReleaseNotes) {\n  $releaseNotes = $OctopusParameters['Octopus.Release.Notes']\n  if ($releaseNotes -ne $Null -and $releaseNotes -ne \"\")\n  {\n      $releaseNotes = $releaseNotes.Replace(\"_\", \"\\_\")\n      $releaseNotes = \"<br>Release notes: $releaseNotes\"\n  }\n}\n\nif ($OctopusParameters['Octopus.Deployment.Error'] -eq $null) {\n    Teams-Notification @{\n        activitySubtitle = \"Success\";\n        uri              = \"$OctopusWebBaseUrl$OctopusWebDeploymentLink\";\n        activityText     = \"$OctopusDeploymentCreatedByDisplayName Deployed [#{Octopus.Project.Name}](#{Octopus.Web.BaseUrl}#{Octopus.Web.ProjectLink}) release [#{Octopus.Release.Number}](#{Octopus.Web.BaseUrl}#{Octopus.Web.ReleaseLink}) to $OctopusEnvironmentName $OctopusActionTargetRoles $OctopusDeploymentTenantName $FormattedMachineName $releaseNotes\";\n        color            = \"00ff00\";\n    };\n}\nelse {\n    Teams-Notification @{\n        activitySubtitle = \"Failed\";\n        uri              = \"$OctopusWebBaseUrl$OctopusWebDeploymentLink\";\n        activityText     = \"$OctopusDeploymentCreatedByDisplayName Failed to deploy [#{Octopus.Project.Name}](#{Octopus.Web.BaseUrl}#{Octopus.Web.ProjectLink}) release [#{Octopus.Release.Number}](#{Octopus.Web.BaseUrl}#{Octopus.Web.ReleaseLink}) to $OctopusEnvironmentName $OctopusActionTargetRoles $OctopusDeploymentTenantName $FormattedMachineName $releaseNotes\";\n        color            = \"ff0000\";\n    };\n}",
            "Octopus.Action.Template.Id": "ActionTemplates-825",
            "Octopus.Action.Template.Version": "2",
            "IconUrl": "https://octopus.com/content/resources/favicon.png",
            "Timeout": "60",
            "IncludeMachineName": "False",
            "IncludeReleaseNotes": "True",
            "Octopus.Action.RunOnServer": "true",
            "TeamsHookUrl": "#{teams.channel.webhook}"
          },
          "Links": {}
        }
      ]
    }
  ],
  "LastSnapshotId": null,
  "Links": {
    "Self": "/api/Spaces-2/projects/Projects-2427/deploymentprocesses",
    "Project": "/api/Spaces-2/projects/Projects-2427",
    "Template": "/api/Spaces-2/projects/Projects-2427/deploymentprocesses/template{?channel,releaseId}",
    "Validation": "/api/Spaces-2/projects/Projects-2427/deploymentprocesses/validate"
  }
}